//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\zhout\RiderProjects\myprolang\AntlrCSharp\Content\Sample.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AntlrCSharp.Content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class SampleLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, WHILE=29, INTEGER=30, FLOAT=31, 
		STRING=32, BOOL=33, NULL=34, COMMENT=35, WS=36, IDENTIFIER=37;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "WHILE", "INTEGER", "FLOAT", "STRING", "BOOL", 
		"NULL", "COMMENT", "WS", "IDENTIFIER"
	};


	public SampleLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'for'", "'('", "')'", "'switch'", "'{'", "'default'", "':'", 
		"'}'", "'case'", "'if'", "'else'", "'='", "','", "'function'", "'!'", 
		"'*'", "'/'", "'+'", "'-'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", 
		"'and'", "'or'", null, null, null, null, null, "'null'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, "WHILE", "INTEGER", "FLOAT", "STRING", "BOOL", 
		"NULL", "COMMENT", "WS", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Sample.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\'\xFE\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3"+
		"\x6\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\n\x3"+
		"\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3"+
		"\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14"+
		"\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x19"+
		"\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C"+
		"\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E"+
		"\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x5\x1E\xB2\n\x1E\x3\x1F\x6\x1F\xB5"+
		"\n\x1F\r\x1F\xE\x1F\xB6\x3 \x6 \xBA\n \r \xE \xBB\x3 \x3 \x6 \xC0\n \r"+
		" \xE \xC1\x3!\x3!\a!\xC6\n!\f!\xE!\xC9\v!\x3!\x3!\x3!\a!\xCE\n!\f!\xE"+
		"!\xD1\v!\x3!\x5!\xD4\n!\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x5"+
		"\"\xDF\n\"\x3#\x3#\x3#\x3#\x3#\x3$\x3$\x3$\x3$\a$\xEA\n$\f$\xE$\xED\v"+
		"$\x3$\x3$\x3%\x6%\xF2\n%\r%\xE%\xF3\x3%\x3%\x3&\x3&\a&\xFA\n&\f&\xE&\xFD"+
		"\v&\x2\x2\x2\'\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t"+
		"\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F"+
		"\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19"+
		"\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?"+
		"\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'\x3\x2\t\x3\x2\x32;\x3\x2"+
		"$$\x3\x2))\x4\x2\f\f\xF\xF\x5\x2\v\f\xF\xF\"\"\x5\x2\x43\\\x61\x61\x63"+
		"|\x6\x2\x32;\x43\\\x61\x61\x63|\x108\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2"+
		"\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2"+
		"\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2"+
		"\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D"+
		"\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3"+
		"\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2"+
		"\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2"+
		"\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2"+
		"\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3"+
		"\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x3M\x3\x2\x2"+
		"\x2\x5O\x3\x2\x2\x2\aS\x3\x2\x2\x2\tU\x3\x2\x2\x2\vW\x3\x2\x2\x2\r^\x3"+
		"\x2\x2\x2\xF`\x3\x2\x2\x2\x11h\x3\x2\x2\x2\x13j\x3\x2\x2\x2\x15l\x3\x2"+
		"\x2\x2\x17q\x3\x2\x2\x2\x19t\x3\x2\x2\x2\x1By\x3\x2\x2\x2\x1D{\x3\x2\x2"+
		"\x2\x1F}\x3\x2\x2\x2!\x86\x3\x2\x2\x2#\x88\x3\x2\x2\x2%\x8A\x3\x2\x2\x2"+
		"\'\x8C\x3\x2\x2\x2)\x8E\x3\x2\x2\x2+\x90\x3\x2\x2\x2-\x92\x3\x2\x2\x2"+
		"/\x94\x3\x2\x2\x2\x31\x97\x3\x2\x2\x2\x33\x9A\x3\x2\x2\x2\x35\x9D\x3\x2"+
		"\x2\x2\x37\xA0\x3\x2\x2\x2\x39\xA4\x3\x2\x2\x2;\xB1\x3\x2\x2\x2=\xB4\x3"+
		"\x2\x2\x2?\xB9\x3\x2\x2\x2\x41\xD3\x3\x2\x2\x2\x43\xDE\x3\x2\x2\x2\x45"+
		"\xE0\x3\x2\x2\x2G\xE5\x3\x2\x2\x2I\xF1\x3\x2\x2\x2K\xF7\x3\x2\x2\x2MN"+
		"\a=\x2\x2N\x4\x3\x2\x2\x2OP\ah\x2\x2PQ\aq\x2\x2QR\at\x2\x2R\x6\x3\x2\x2"+
		"\x2ST\a*\x2\x2T\b\x3\x2\x2\x2UV\a+\x2\x2V\n\x3\x2\x2\x2WX\au\x2\x2XY\a"+
		"y\x2\x2YZ\ak\x2\x2Z[\av\x2\x2[\\\a\x65\x2\x2\\]\aj\x2\x2]\f\x3\x2\x2\x2"+
		"^_\a}\x2\x2_\xE\x3\x2\x2\x2`\x61\a\x66\x2\x2\x61\x62\ag\x2\x2\x62\x63"+
		"\ah\x2\x2\x63\x64\a\x63\x2\x2\x64\x65\aw\x2\x2\x65\x66\an\x2\x2\x66g\a"+
		"v\x2\x2g\x10\x3\x2\x2\x2hi\a<\x2\x2i\x12\x3\x2\x2\x2jk\a\x7F\x2\x2k\x14"+
		"\x3\x2\x2\x2lm\a\x65\x2\x2mn\a\x63\x2\x2no\au\x2\x2op\ag\x2\x2p\x16\x3"+
		"\x2\x2\x2qr\ak\x2\x2rs\ah\x2\x2s\x18\x3\x2\x2\x2tu\ag\x2\x2uv\an\x2\x2"+
		"vw\au\x2\x2wx\ag\x2\x2x\x1A\x3\x2\x2\x2yz\a?\x2\x2z\x1C\x3\x2\x2\x2{|"+
		"\a.\x2\x2|\x1E\x3\x2\x2\x2}~\ah\x2\x2~\x7F\aw\x2\x2\x7F\x80\ap\x2\x2\x80"+
		"\x81\a\x65\x2\x2\x81\x82\av\x2\x2\x82\x83\ak\x2\x2\x83\x84\aq\x2\x2\x84"+
		"\x85\ap\x2\x2\x85 \x3\x2\x2\x2\x86\x87\a#\x2\x2\x87\"\x3\x2\x2\x2\x88"+
		"\x89\a,\x2\x2\x89$\x3\x2\x2\x2\x8A\x8B\a\x31\x2\x2\x8B&\x3\x2\x2\x2\x8C"+
		"\x8D\a-\x2\x2\x8D(\x3\x2\x2\x2\x8E\x8F\a/\x2\x2\x8F*\x3\x2\x2\x2\x90\x91"+
		"\a>\x2\x2\x91,\x3\x2\x2\x2\x92\x93\a@\x2\x2\x93.\x3\x2\x2\x2\x94\x95\a"+
		">\x2\x2\x95\x96\a?\x2\x2\x96\x30\x3\x2\x2\x2\x97\x98\a@\x2\x2\x98\x99"+
		"\a?\x2\x2\x99\x32\x3\x2\x2\x2\x9A\x9B\a?\x2\x2\x9B\x9C\a?\x2\x2\x9C\x34"+
		"\x3\x2\x2\x2\x9D\x9E\a#\x2\x2\x9E\x9F\a?\x2\x2\x9F\x36\x3\x2\x2\x2\xA0"+
		"\xA1\a\x63\x2\x2\xA1\xA2\ap\x2\x2\xA2\xA3\a\x66\x2\x2\xA3\x38\x3\x2\x2"+
		"\x2\xA4\xA5\aq\x2\x2\xA5\xA6\at\x2\x2\xA6:\x3\x2\x2\x2\xA7\xA8\ay\x2\x2"+
		"\xA8\xA9\aj\x2\x2\xA9\xAA\ak\x2\x2\xAA\xAB\an\x2\x2\xAB\xB2\ag\x2\x2\xAC"+
		"\xAD\aw\x2\x2\xAD\xAE\ap\x2\x2\xAE\xAF\av\x2\x2\xAF\xB0\ak\x2\x2\xB0\xB2"+
		"\an\x2\x2\xB1\xA7\x3\x2\x2\x2\xB1\xAC\x3\x2\x2\x2\xB2<\x3\x2\x2\x2\xB3"+
		"\xB5\t\x2\x2\x2\xB4\xB3\x3\x2\x2\x2\xB5\xB6\x3\x2\x2\x2\xB6\xB4\x3\x2"+
		"\x2\x2\xB6\xB7\x3\x2\x2\x2\xB7>\x3\x2\x2\x2\xB8\xBA\t\x2\x2\x2\xB9\xB8"+
		"\x3\x2\x2\x2\xBA\xBB\x3\x2\x2\x2\xBB\xB9\x3\x2\x2\x2\xBB\xBC\x3\x2\x2"+
		"\x2\xBC\xBD\x3\x2\x2\x2\xBD\xBF\a\x30\x2\x2\xBE\xC0\t\x2\x2\x2\xBF\xBE"+
		"\x3\x2\x2\x2\xC0\xC1\x3\x2\x2\x2\xC1\xBF\x3\x2\x2\x2\xC1\xC2\x3\x2\x2"+
		"\x2\xC2@\x3\x2\x2\x2\xC3\xC7\a$\x2\x2\xC4\xC6\n\x3\x2\x2\xC5\xC4\x3\x2"+
		"\x2\x2\xC6\xC9\x3\x2\x2\x2\xC7\xC5\x3\x2\x2\x2\xC7\xC8\x3\x2\x2\x2\xC8"+
		"\xCA\x3\x2\x2\x2\xC9\xC7\x3\x2\x2\x2\xCA\xD4\a$\x2\x2\xCB\xCF\a)\x2\x2"+
		"\xCC\xCE\n\x4\x2\x2\xCD\xCC\x3\x2\x2\x2\xCE\xD1\x3\x2\x2\x2\xCF\xCD\x3"+
		"\x2\x2\x2\xCF\xD0\x3\x2\x2\x2\xD0\xD2\x3\x2\x2\x2\xD1\xCF\x3\x2\x2\x2"+
		"\xD2\xD4\a)\x2\x2\xD3\xC3\x3\x2\x2\x2\xD3\xCB\x3\x2\x2\x2\xD4\x42\x3\x2"+
		"\x2\x2\xD5\xD6\av\x2\x2\xD6\xD7\at\x2\x2\xD7\xD8\aw\x2\x2\xD8\xDF\ag\x2"+
		"\x2\xD9\xDA\ah\x2\x2\xDA\xDB\a\x63\x2\x2\xDB\xDC\an\x2\x2\xDC\xDD\au\x2"+
		"\x2\xDD\xDF\ag\x2\x2\xDE\xD5\x3\x2\x2\x2\xDE\xD9\x3\x2\x2\x2\xDF\x44\x3"+
		"\x2\x2\x2\xE0\xE1\ap\x2\x2\xE1\xE2\aw\x2\x2\xE2\xE3\an\x2\x2\xE3\xE4\a"+
		"n\x2\x2\xE4\x46\x3\x2\x2\x2\xE5\xE6\a\x31\x2\x2\xE6\xE7\a\x31\x2\x2\xE7"+
		"\xEB\x3\x2\x2\x2\xE8\xEA\n\x5\x2\x2\xE9\xE8\x3\x2\x2\x2\xEA\xED\x3\x2"+
		"\x2\x2\xEB\xE9\x3\x2\x2\x2\xEB\xEC\x3\x2\x2\x2\xEC\xEE\x3\x2\x2\x2\xED"+
		"\xEB\x3\x2\x2\x2\xEE\xEF\b$\x2\x2\xEFH\x3\x2\x2\x2\xF0\xF2\t\x6\x2\x2"+
		"\xF1\xF0\x3\x2\x2\x2\xF2\xF3\x3\x2\x2\x2\xF3\xF1\x3\x2\x2\x2\xF3\xF4\x3"+
		"\x2\x2\x2\xF4\xF5\x3\x2\x2\x2\xF5\xF6\b%\x2\x2\xF6J\x3\x2\x2\x2\xF7\xFB"+
		"\t\a\x2\x2\xF8\xFA\t\b\x2\x2\xF9\xF8\x3\x2\x2\x2\xFA\xFD\x3\x2\x2\x2\xFB"+
		"\xF9\x3\x2\x2\x2\xFB\xFC\x3\x2\x2\x2\xFCL\x3\x2\x2\x2\xFD\xFB\x3\x2\x2"+
		"\x2\xE\x2\xB1\xB6\xBB\xC1\xC7\xCF\xD3\xDE\xEB\xF3\xFB\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace AntlrCSharp.Content
